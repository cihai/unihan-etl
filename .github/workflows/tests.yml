name: tests

on: [push, pull_request]

jobs:
  build:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Test runtime dependencies
        run: |
          uv run --no-dev -p python${{ matrix.python-version }} -- python -c '
          from unihan_etl import _internal, data_files, core, __about__, __main__, constants, expansion, options, pytest_plugin, test, types, util, __version__
          from unihan_etl._internal import app_dirs 
          print("unihan_etl version:", __version__)
          '

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Print python versions
        run: |
          python -V
          uv run python -V

      - name: Lint with ruff check
        run: uv run ruff check .

      - name: Format with ruff format
        run: uv run ruff format . --check

      - name: Lint with mypy
        run: uv run mypy .

      - name: Test with pytest
        run: uv run py.test --cov=./ --cov-report=xml

      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    strategy:
      matrix:
        python-version: ['3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Build package
        run: uv build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
